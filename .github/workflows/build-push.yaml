name: Build and Push Podman Image
on:
  workflow_run:
    workflows: ["Tag and Create Release"]
    types: [completed]
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Podman
        run: |
          sudo apt-get update
          sudo apt-get install -y podman
      - name: Login to DockerHub
        run: |
          podman login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} docker.io
      - name: Set is_major_bump variable
        id: set_major_bump
        run: |
          # Fetch all tags (including existing ones)
          git fetch --tags

          # Get the NEWLY CREATED tag from the GitHub event
          NEW_VERSION="${{ github.event.release.tag_name }}"

          # Get the LATEST EXISTING TAG (before this release)
          LATEST_EXISTING_VERSION=$(git tag --sort=-v:refname | grep -v "$NEW_VERSION" | head -n 1)

          # If there's no existing tag (first release), default to "0.0.0"
          LATEST_EXISTING_VERSION=${LATEST_EXISTING_VERSION:-"0.0.0"}

          # Split versions into parts
          NEW_MAJOR=$(echo "$NEW_VERSION" | cut -d. -f1)
          NEW_MINOR=$(echo "$NEW_VERSION" | cut -d. -f2)
          NEW_PATCH=$(echo "$NEW_VERSION" | cut -d. -f3)

          EXISTING_MAJOR=$(echo "$LATEST_EXISTING_VERSION" | cut -d. -f1)
          EXISTING_MINOR=$(echo "$LATEST_EXISTING_VERSION" | cut -d. -f2)
          EXISTING_PATCH=$(echo "$LATEST_EXISTING_VERSION" | cut -d. -f3)

          # Check if MAJOR version increased, and MINOR/PATCH reset to 0
          if [[ $NEW_MAJOR -gt $EXISTING_MAJOR ]] && [[ $NEW_MINOR -eq 0 ]] && [[ $NEW_PATCH -eq 0 ]]; then
            echo "is_major_bump=true" >> $GITHUB_ENV
          else
            echo "is_major_bump=false" >> $GITHUB_ENV
          fi
      - name: Build and push Container image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version=${{ github.event.release.tag_name }}
          podman image build -t contre95/expense-mate:$version .
          podman push contre95/expense-mate:$version
          # Tag and push the :beta tag
          podman tag contre95/expense-mate:$version contre95/expense-mate:beta
          podman push contre95/expense-mate:beta
          if [[ "${{ github.ref }}" == "refs/heads/main" || "${{ env.is_major_bump }}" == "true" ]]; then
            # Tag and push the :latest tag
            podman tag contre95/expense-mate:$version contre95/expense-mate:latest
            podman push contre95/expense-mate:latest
          fi
